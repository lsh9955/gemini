# upstream websocket {
#     server socket:5000;
# }

server {
     listen 80;
     listen [::]:80;
     server_name mygemini.co.kr www.mygemini.co.kr;

    #  location /.well-known/acme-challenge/ {
    #          allow all;
    #          root /var/www/certbot;
    #  }  
    # ssl 인증서 발급용

    location / {
        proxy_pass http://client:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
        return 301 https://mygemini.co.kr$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name mygemini.co.kr www.mygemini.co.kr;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/mygemini.co.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mygemini.co.kr/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    if ($host = 'www.mygemini.co.kr') {
        return 301 https://mygemini.co.kr$request_uri;
    }

    location / {
        proxy_pass http://client:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /auth/validate {
        internal;
        proxy_pass http://auth-service:8080/auth/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    location /auth {
        proxy_pass http://auth-service:8080/auth;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /oauth2 {
        proxy_pass http://auth-service:8080/oauth2;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }

    location /login/ {
        proxy_pass http://auth-service:8080/login/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-Ip $remote_addr;
    }
    
    location /user-service {
        auth_request /auth/validate;
        auth_request_set $username $upstream_http_x_username;
        proxy_pass http://user-service:8081/user-service;
        proxy_set_header X-Username $username;
    }

    # location /api/room {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_pass https://websocket/api/room;
    # }

    # location /api/socket/room {
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     proxy_http_version 1.1;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_pass https://websocket/api/socket/room;
    # }

}